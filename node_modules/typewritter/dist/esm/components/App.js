import React from 'react';
import { useEffect, useState } from 'react';
var TypeWrittingEffect = function (props) {
    var text = props.text, speed = props.speed, fontSize = props.fontSize, clearMessageSpeed = props.clearMessageSpeed, loop = props.loop;
    var _a = useState(''), message = _a[0], setMessage = _a[1];
    var _b = useState(0), index = _b[0], setIndex = _b[1];
    var _c = useState(true), isTyping = _c[0], setTyping = _c[1];
    useEffect(function () {
        if (isTyping) {
            var method_1 = setInterval(function () {
                setIndex(function (count) { return count + 1; });
                setMessage(text.substr(0, index));
            }, speed);
            return function () {
                clearInterval(method_1);
                if (message === text && loop === true) {
                    setIndex(function (count) { return count * -1; });
                    setTyping(false);
                }
            };
        }
        else {
            var method_2 = setInterval(function () {
                setIndex(function (count) { return count - 1; });
                var messageArray = message.split('');
                messageArray.splice(-1, 1);
                setMessage(messageArray.join(''));
                if (messageArray.length === 0) {
                    setTyping(true);
                }
            }, clearMessageSpeed);
            return function () {
                clearInterval(method_2);
            };
        }
    }, [index]);
    return (React.createElement(React.Fragment, null,
        React.createElement("div", { style: { fontSize: fontSize } },
            message,
            React.createElement("span", { style: { height: fontSize } }))));
};
export default TypeWrittingEffect;
//# sourceMappingURL=App.js.map